<?php

namespace UserBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use FOS\UserBundle\Model\User as BaseUser;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * User
 *
 * @ORM\Table(name="sf_user")
 * @ORM\Entity(repositoryClass="UserBundle\Repository\UserRepository")
 */
class User extends BaseUser
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var string
     *
     * @ORM\Column(name="account_type", type="string", length=255)
     */
    private $accountType;

    /**
     * @var string
     *
     * @ORM\Column(name="firstname", type="string", length=255)
     */
    private $firstname;

    /**
     * @var string
     *
     * @ORM\Column(name="lastname", type="string", length=255)
     */
    private $lastname;

    /**
     * @var string
     * @ORM\Column(name="born_at", type="string", length=255, nullable=true)
     */
    private $bornAt;

    /**
     * @var string
     *
     * @ORM\Column(name="oat", type="string", length=255, nullable=true)
     */
    private $oat;

    /**
     * @var string
     *
     * @ORM\Column(name="year_of_diploma", type="string", length=255, nullable=true)
     */
    private $yearOfDiploma;

    /**
     * @var string
     *
     * @ORM\Column(name="institute_of_diploma", type="string", length=255, nullable=true)
     */
    private $instituteOfDiploma;

    /**
     * @var string
     *
     * @ORM\Column(name="architect_type", type="string", length=255, nullable=true)
     */
    private $architectType;

    /**
     * @var string
     *
     * @ORM\Column(name="phone", type="string", length=255, nullable=true)
     */
    private $phone;

    /**
     * @var string
     *
     * @ORM\Column(name="address", type="string", length=255, nullable=true)
     */
    private $address;

    /**
     * @var string
     *
     * @ORM\Column(name="zip_code", type="string", length=255, nullable=true)
     */
    private $zipCode;

    /**
     * @var string
     *
     * @ORM\Column(name="city", type="string", length=255, nullable=true)
     */
    private $city;

    /**
     * @var string
     *
     * @ORM\Column(name="website", type="string", length=255, nullable=true)
     */
    private $website;

    /**
     * @var string
     *
     * @ORM\Column(name="facebook", type="string", length=255, nullable=true)
     */
    private $facebook;

    /**
     * @var string
     *
     * @ORM\Column(name="instagram", type="string", length=255, nullable=true)
     */
    private $instagram;

    /**
     * @var string
     *
     * @ORM\Column(name="linkedin", type="string", length=255, nullable=true)
     */
    private $linkedin;

    /**
     * @var string
     *
     * @ORM\Column(name="description", type="text", nullable=true)
     */
    private $description;

    /**
     * @var string
     *
     * @ORM\Column(name="logo", type="string", length=255, nullable=true)
     * @Assert\File(mimeTypes={ "image/jpeg", "image/gif", "image/png", })
     */
    private $logo;

    /**
     * @var boolean
     *
     * @ORM\Column(name="state", type="boolean", nullable=true)
     */
    private $state;

    /**
     * @ORM\OneToMany(targetEntity="ArchiSpaceBundle\Entity\Project", mappedBy="user", cascade={"persist", "remove"})
     */
    private $projects;

    /**
     * @ORM\ManyToMany(targetEntity="ArchiSpaceBundle\Entity\Book")
     *
     */
    private $favorit_books;

    /**
     * @ORM\ManyToMany(targetEntity="ArchiSpaceBundle\Entity\Pau")
     *
     */
    private $favorit_pau;

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    public function __construct()
    {
        parent::__construct();
        $this->state = false;
    }

    public function setEmail($email)
    {
        parent::setEmail($email);
        parent::setUsername($email);
    }

    /**
     * Set accountType
     *
     * @param string $accountType
     *
     * @return User
     */
    public function setAccountType($accountType)
    {
        $this->accountType = $accountType;

        return $this;
    }

    /**
     * Get accountType
     *
     * @return string
     */
    public function getAccountType()
    {
        return $this->accountType;
    }

    /**
     * Set firstname
     *
     * @param string $firstname
     *
     * @return User
     */
    public function setFirstname($firstname)
    {
        $this->firstname = $firstname;

        return $this;
    }

    /**
     * Get firstname
     *
     * @return string
     */
    public function getFirstname()
    {
        return $this->firstname;
    }

    /**
     * Set lastname
     *
     * @param string $lastname
     *
     * @return User
     */
    public function setLastname($lastname)
    {
        $this->lastname = $lastname;

        return $this;
    }

    /**
     * Get lastname
     *
     * @return string
     */
    public function getLastname()
    {
        return $this->lastname;
    }

    /**
     * Set bornAt
     *
     * @param \DateTime $bornAt
     *
     * @return User
     */
    public function setBornAt($bornAt)
    {
        $this->bornAt = $bornAt;

        return $this;
    }

    /**
     * Get bornAt
     *
     * @return \DateTime
     */
    public function getBornAt()
    {
        return $this->bornAt;
    }

    /**
     * Set oat
     *
     * @param string $oat
     *
     * @return User
     */
    public function setOat($oat)
    {
        $this->oat = $oat;

        return $this;
    }

    /**
     * Get oat
     *
     * @return string
     */
    public function getOat()
    {
        return $this->oat;
    }

    /**
     * Set yearOfDiploma
     *
     * @param string $yearOfDiploma
     *
     * @return User
     */
    public function setYearOfDiploma($yearOfDiploma)
    {
        $this->yearOfDiploma = $yearOfDiploma;

        return $this;
    }

    /**
     * Get yearOfDiploma
     *
     * @return string
     */
    public function getYearOfDiploma()
    {
        return $this->yearOfDiploma;
    }

    /**
     * Set instituteOfDiploma
     *
     * @param string $instituteOfDiploma
     *
     * @return User
     */
    public function setInstituteOfDiploma($instituteOfDiploma)
    {
        $this->instituteOfDiploma = $instituteOfDiploma;

        return $this;
    }

    /**
     * Get instituteOfDiploma
     *
     * @return string
     */
    public function getInstituteOfDiploma()
    {
        return $this->instituteOfDiploma;
    }

    /**
     * Set architectType
     *
     * @param string $architectType
     *
     * @return User
     */
    public function setArchitectType($architectType)
    {
        $this->architectType = $architectType;

        return $this;
    }

    /**
     * Get architectType
     *
     * @return string
     */
    public function getArchitectType()
    {
        return $this->architectType;
    }

    /**
     * Set phone
     *
     * @param string $phone
     *
     * @return User
     */
    public function setPhone($phone)
    {
        $this->phone = $phone;

        return $this;
    }

    /**
     * Get phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->phone;
    }

    /**
     * Set address
     *
     * @param string $address
     *
     * @return User
     */
    public function setAddress($address)
    {
        $this->address = $address;

        return $this;
    }

    /**
     * Get address
     *
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * Set zipCode
     *
     * @param string $zipCode
     *
     * @return User
     */
    public function setZipCode($zipCode)
    {
        $this->zipCode = $zipCode;

        return $this;
    }

    /**
     * Get zipCode
     *
     * @return string
     */
    public function getZipCode()
    {
        return $this->zipCode;
    }

    /**
     * Set city
     *
     * @param string $city
     *
     * @return User
     */
    public function setCity($city)
    {
        $this->city = $city;

        return $this;
    }

    /**
     * Get city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->city;
    }

    /**
     * Set website
     *
     * @param string $website
     *
     * @return User
     */
    public function setWebsite($website)
    {
        $this->website = $website;

        return $this;
    }

    /**
     * Get website
     *
     * @return string
     */
    public function getWebsite()
    {
        return $this->website;
    }

    /**
     * Set facebook
     *
     * @param string $facebook
     *
     * @return User
     */
    public function setFacebook($facebook)
    {
        $this->facebook = $facebook;

        return $this;
    }

    /**
     * Get facebook
     *
     * @return string
     */
    public function getFacebook()
    {
        return $this->facebook;
    }

    /**
     * Set instagram
     *
     * @param string $instagram
     *
     * @return User
     */
    public function setInstagram($instagram)
    {
        $this->instagram = $instagram;

        return $this;
    }

    /**
     * Get instagram
     *
     * @return string
     */
    public function getInstagram()
    {
        return $this->instagram;
    }

    /**
     * Set linkedin
     *
     * @param string $linkedin
     *
     * @return User
     */
    public function setLinkedin($linkedin)
    {
        $this->linkedin = $linkedin;

        return $this;
    }

    /**
     * Get linkedin
     *
     * @return string
     */
    public function getLinkedin()
    {
        return $this->linkedin;
    }

    /**
     * Set description
     *
     * @param string $description
     *
     * @return User
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * @return string
     */
    public function getLogo()
    {
        return $this->logo;
    }

    /**
     * @param string $logo
     */
    public function setLogo($logo)
    {
        $this->logo = $logo;
    }

    /**
     * @return boolean
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * @param boolean $state
     */
    public function setState($state)
    {
        $this->state = $state;
    }

    /**
     * Add project
     *
     * @param \ArchiSpaceBundle\Entity\Project $project
     *
     * @return User
     */
    public function addProject(\ArchiSpaceBundle\Entity\Project $project)
    {
        $this->projects[] = $project;

        return $this;
    }

    /**
     * Remove project
     *
     * @param \ArchiSpaceBundle\Entity\Project $project
     */
    public function removeProject(\ArchiSpaceBundle\Entity\Project $project)
    {
        $this->projects->removeElement($project);
    }

    /**
     * Get projects
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getProjects()
    {
        return $this->projects;
    }
    


    /**
     * Add favoritBook
     *
     * @param \ArchiSpaceBundle\Entity\Book $favoritBook
     *
     * @return User
     */
    public function addFavoritBook(\ArchiSpaceBundle\Entity\Book $favoritBook)
    {
        $this->favorit_books[] = $favoritBook;

        return $this;
    }

    /**
     * Remove favoritBook
     *
     * @param \ArchiSpaceBundle\Entity\Book $favoritBook
     */
    public function removeFavoritBook(\ArchiSpaceBundle\Entity\Book $favoritBook)
    {
        $this->favorit_books->removeElement($favoritBook);
    }

    /**
     * Get favoritBooks
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getFavoritBooks()
    {
        return $this->favorit_books;
    }
}
